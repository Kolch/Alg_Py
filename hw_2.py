from random import random

# 1. Написать программу, которая будет складывать, вычитать, умножать или делить два числа.
# Числа и знак операции вводятся пользователем.
# После выполнения вычисления программа не должна завершаться, а должна запрашивать новые данные для вычислений.
# Завершение программы должно выполняться при вводе символа '0' в качестве знака операции.
# Если пользователь вводит неверный знак (не '0', '+', '-', '*', '/'), то программа должна сообщать ему об ошибке и снова запрашивать знак операции.
# Также сообщать пользователю о невозможности деления на ноль, если он ввел 0 в качестве делителя.


def summ(a, b):
    return a + b


def dev(a, b):
    return a / b


def mult(a, b):
    return a * b


def min(a, b):
    return a - b


def action():
    a = int(input("Введите число А: "))
    b = int(input("Введите число B: "))
    char = input("Введите желаемую операцию ['+','-','/','*', '0' - чтобы закончить]: ")
    flag = 1
    if char != '+' and char != '-' and char != '/' and char != '*' and char != '0':
        flag = 0

    while flag == 0:
        print("Вы ввели неправельный знак!")
        char = input("Попробуем еще раз:")
        if char == '+' or char == '-' or char == '/' or char == '*' or char == '0':
            break

    if char == '0':
        print("До новых встреч!")

    elif char == '+':
        result = summ(a, b)
        print("Результат вычислений - ", result)
        action()

    elif char == '-':
        result = min(a, b)
        print("Результат вычислений - ", result)
        action()

    elif char == '*':
        result = mult(a, b)
        print("Результат вычислений - ", result)
        action()

    elif char == '/':
        if b == 0:
            print("Нельзя делить на 0!!!")
            action()
        else:
            result = dev(a, b)
            print("Результат вычислений - ", result)
            action()


action()

# 2. Посчитать четные и нечетные цифры введенного натурального числа.
# Например, если введено число 34560, то у него 3 четные цифры (4, 6 и 0) и 2 нечетные (3 и 5).


def is_even(x):
    if x % 2 == 0:
        return True
    else:
        return False


even = []
odd = []

number = int(input("Введите натуральное число:"))
while number != 0:
    x = number % 10
    if is_even(x):
        even.append(x)
    else:
        odd.append(x)
    number = number // 10
print("Четные цифры вашего числа - ", even)
print("Нечетные цифры вашего числа - ", odd)


# 3. Сформировать из введенного числа обратное по порядку входящих в него цифр и вывести на экран.
# Например, если введено число 3486, то надо вывести число 6843.
number1 = int(input("Введите число:"))
result = ""
while number1 != 0:
    x = number1 % 10
    result += str(x)
    number1 = number1 // 10
print("Число зеркальное введенному -", result)


# 4. Найти сумму n элементов следующего ряда чисел: 1 -0.5 0.25 -0.125 ...Количество элементов (n) вводится с клавиатуры
print("Задача 4")
n = int(input("Введите кол-во элементов:"))


def step(n, x, z, result):
    if n == 0:
        print("Результат - ", result)
    else:
        s = z / 2
        s = s * x
        result += s
        n = n - 1
        x = x * -1
        z = z / 2
        # print(s)
        step(n, x, z, result)


step(n, 1, 2, 0)

# 5. Вывести на экран коды и символы таблицы ASCII, начиная с символа под номером 32 и заканчивая 127-м включительно.
# Вывод выполнить в табличной форме: по десять пар "код-символ" в каждой строке.
print("Задача 5")
for i in range(32, 128):
    print("%4d-%s" % (i, chr(i)), end='')
    if i % 10 == 0:
        print()


# 6. В программе генерируется случайное целое число от 0 до 100.
# Пользователь должен его отгадать не более чем за 10 попыток.
# После каждой неудачной попытки должно сообщаться больше или меньше введенное пользователем число, чем то, что загадано
# Если за 10 попыток число не отгадано, то вывести загаданное число.
rand = round(random() * 100)
t = 1
print("\nЯ загадал число, попробуй отгадать, у тебя 10 попыток")
_input = int(input("Твой вариант:"))

while t < 10:
    if _input == rand:
        print("Ты победил!!!")
        break
    elif _input > rand:
        _input = int(input("Число меньше чем ты думаешь, попробуй еще..."))
    elif _input < rand:
        _input = int(input("Число больше чем ты думаешь, попробуй еще..."))
    t += 1
else:
    print("Ты проиграл :( Вот то что я загадал -", rand)


# 7. Напишите программу, доказывающую или проверяющую, что для множества натуральных чисел выполняется равенство: 1+2+...+n = n(n+1)/2, где n - любое натуральное число.


def prove(n):
    z = n
    # Через цикл

    result1 = 1

    for i in range(1, n):
        result1 += i + 1

    # Через уравнение
    result2 = z*(z+1)/2
    print(result1, "=", result2)


k = int(input("Задача 7\nВведите число n:"))
prove(k)

# 8. Посчитать, сколько раз встречается определенная цифра в введенной последовательности чисел.
# Количество вводимых чисел и цифра, которую необходимо посчитать, задаются вводом с клавиатуры.
print("Задача 8")
number8 = int(input("Введите число:"))
q = int(input("Введите цифру, которую необходимо посчитать:"))
count = 0
while number8 != 0:
    z = number8 % 10
    if z == q:
        count += 1
    number8 = number8 // 10
print("Цифра %d встретилась %d раз" % (q, count))

# 9. Среди натуральных чисел, которые были введены, найти наибольшее по сумме цифр. Вывести на экран это число и сумму его цифр.

print("Задание 9")
max_i = 0
max_s = 0
flag9 = True
while flag9:
    _in = int(input("Введите число (для выхода: -1): "))
    if _in == -1:
        flag9 = False
    else:
        j = 0
        temp = _in
        while _in != 0:
            z = _in % 10
            j += z
            _in = _in // 10
        if j > max_s:
            max_s = j
            max_i = temp
else:
    print("Число с наибольшей суммой цифр - %d, сумма цифа - %d" % (max_i, max_s))
